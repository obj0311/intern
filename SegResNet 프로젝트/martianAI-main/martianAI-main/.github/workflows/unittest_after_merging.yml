# This is a basic workflow to help you get started with Actions

name: UnitTest after merging 

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events but only for the master branch
  pull_request:
    types:
      - closed
    branches:
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:  
    inputs:
        Maually_UnitTest:
            description: "MANUALLY_UNITTEST"
            required: true
            default: true
            
        VS_Version:
            description: "Visual Studio Version"
            required: true
            default: '2022'

env:
  WORKSPACE : ${{ GITHUB.WORKSPACE }}
  BRANCH_NAME_TEMP : ${{ GITHUB.BASE_REF }}
  BUILD_NUMBER : ${{ GITHUB.RUN_NUMBER }}
  REPOSITORY : ${{ GITHUB.REPOSITORY }}
  CommonMD_UTIL_ROOT_DIR : ${{ secrets.CommonMD_UTIL_ROOT_DIR }}
  UNIT_TEST_RESULT_ROOT_DIR : ${{ secrets.UNIT_TEST_RESULT_ROOT_DIR }}
  ARTI_DOWNLOAD_ROOT_DIR : ${{ secrets.ARTI_DOWNLOAD_ROOT_DIR }}
  VS_ROOT_PATH : ${{ secrets.VS2022_ROOT_PATH }}
  VSTEST_CONSOLE_FILE_PATH: ${{ secrets.VS2022_VSTEST_CONSOLE_FILE_PATH }}
  CODE_COVERAGE_FILE_PATH : ${{ secrets.VS2022_CODE_COVERAGE_FILE_PATH }}
  GIT_TOKEN : ${{ secrets.UNIT_GIT_TOKEN }}
  TCM_HOME : ${{ secrets.TCM_HOME }}
  ONEAPI_IPP_DLL_PATH: ${{ secrets.ONEAPI_IPP_DLL_PATH }}
  ONEAPI_MKL_DLL_PATH: ${{ secrets.ONEAPI_MKL_DLL_PATH }}
  REF_NAME : ${{ GITHUB.REF_NAME }}
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "source_download"
  source_download:
    if: github.event.pull_request.merged == true || ${{ inputs.Maually_UnitTest == true }}
    runs-on: [ 237server_unit_pr ]
    steps:
      # Runs a set of commands using the runners shell
      #- uses: actions/checkout@v3
      
      - name: Download after source delete
        shell: cmd
        run: |    
            
            rem echo WORKSPACE=%WORKSPACE%
            if /i "%BRANCH_NAME_TEMP%" == "" (
                set BRANCH_NAME=%REF_NAME%
            ) else (
                set BRANCH_NAME=%BRANCH_NAME_TEMP%
            )
            echo TARGET_BRANCH_NAME = %BRANCH_NAME%
            
            if exist %WORKSPACE% del /q %WORKSPACE%\*.*
            if exist %WORKSPACE% rmdir %WORKSPACE% /s /q
            
            git clone -b %BRANCH_NAME% git@github.sec.samsung.net:%REPOSITORY%.git %WORKSPACE%
        
  build_unit_test:
    if: github.event.pull_request.merged == true || ${{ inputs.Maually_UnitTest == true }}
    # The type of runner that the job will run on
    runs-on: [ 237server_unit_pr ]
    needs: source_download
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Run a UnitTest after merging 
        shell: cmd
        run: |        
            set DATE_T=%date%
            for /f "tokens=2 delims=/" %%a in ("${{GITHUB.REPOSITORY}}") do (set GIT_REPO=%%a)
            set UNIT_TEST_RESULT_ROOT_DIR_TEMP=%UNIT_TEST_RESULT_ROOT_DIR%
            set UNITTEST_AFTER_MERGING=true
            
            rem echo WORKSPACE=%WORKSPACE%
            echo DATE_T \ GIT_REPO \ NUMBER = %date% \ %GIT_REPO% \ %BUILD_NUMBER% 
            
            if /i "%BRANCH_NAME_TEMP%" == "" (
                 set BRANCH_NAME=%REF_NAME%
            ) else (
                 set BRANCH_NAME=%BRANCH_NAME_TEMP%
            )
            echo TARGET_BRANCH_NAME = %BRANCH_NAME%
            
            echo +====================================================================+
            rem curl -H "Authorization: token %GIT_TOKEN%" -O "https://raw.github.sec.samsung.net/HME-US/test-meta/main/Test_Start.bat"
            %CommonMD_UTIL_ROOT_DIR%\Utils\PyArti\PyArti.exe download HME-US-UnitTest/Tool/TestBatch/230831/ %WORKSPACE%\
            echo +====================================================================+
            CD %WORKSPACE%
            cd..
            set COMMONMD_WORKSPACE_PATH=%CD%
            rem echo COMMONMD_WORKSPACE_PATH=%COMMONMD_WORKSPACE_PATH%
            set VS_VER=${{ inputs.VS_Version }}
            
            call %WORKSPACE%\UnitTest_Config.bat
            
            set UNIT_TEST_RESULT_FOLDER=%UNIT_TEST_RESULT_ROOT_DIR_TEMP%\%MODULE_NAME%\%BRANCH_NAME%
            if exist %UNIT_TEST_RESULT_FOLDER% rmdir %UNIT_TEST_RESULT_FOLDER% /s /q
            
            call %WORKSPACE%\Test_Start.bat %GIT_REPO% %WORKSPACE%
            call %WORKSPACE%\TCM_CommonModule.bat %MODULE_NAME%
            
            del /q %WORKSPACE%\TCM_CommonModule.bat

# GPU 로 AI Inference를 하는 부분이 포함되어 ASAN Test 를 제외함. 개발자 협의 사항            
#  build_asan_test:    
